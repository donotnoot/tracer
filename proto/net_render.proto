syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "github.com/donotnoot/tracer/netcode/pkg/pb";

package net_render;

// Spec represents the spec for a scene.
message Spec {
	string id = 1;
	string spec = 2;
}

// Job is a single job for a worker.
message Job {
	// Spec id for the scene.
	string scene_id = 1;

	// The pixel tiles that are supposed to be rendered.
	repeated Tile tiles = 2;
}

// A tile represents a single renderable tile of pixels. Starts at (x,y), ends
// at (x+size, y+size).
message Tile {
	uint32 x = 1;
	uint32 y = 2;
	uint32 size = 3;
}

// JobResult is the result of a single job processed by a worker.
message JobResult {
	repeated Pixel pixels = 1;
}

// Pixel represents a single pixel within the canvas.
message Pixel {
	uint32 x = 1;
	uint32 y = 2;
	uint32 color = 3; // color in 4 bit RGBA packed format.
}

service Worker {
	rpc Scene(Spec) returns (google.protobuf.Empty);
	rpc Work(Job) returns (stream JobResult);
}
