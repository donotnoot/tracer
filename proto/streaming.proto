syntax = "proto3";

import "google/protobuf/empty.proto";

package streaming;

option go_package = "github.com/donotnoot/tracer/netcode/pkg/pb";

// Job is a single job for a worker.
message Job {
	// spec is (for now) YAML for the scene.
	string spec = 1;

	// pixels are the pixels that the worker is supposed to render.
	repeated Position pixels = 2;
}

// Position represents the position of a single point within the canvas.
message Position {
	uint32 x = 1;
	uint32 y = 2;
}

// Pixel represents a single pixel within the canvas.
message Pixel {
	double r = 1;
	double g = 2;
	double b = 3;
	Position position = 4;
}

// Score represents the benchmark score of a worker.
message Score {
	double finished_in = 1;
}

service Worker {
	// Work accepts jobs and returns streams of rendered pixels.
	rpc Work(Job) returns (stream Pixel);

	// Benchmark returns the benchmark score of the worker.
	rpc Benchmark(google.protobuf.Empty) returns (Score);
}
